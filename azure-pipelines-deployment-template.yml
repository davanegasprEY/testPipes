parameters:
  - name: artifactory_service
    type: string
  - name: artifactory_repository
    type: string
  - name: kubernetesServiceConnection
    type: string
  - name: environment
    type: string
  - name: project_name
    type: string
  - name: deployment_path
    type: string

jobs:
  - job: HelmPackageDeploy
    displayName: "Helm Package Build"
    steps:
      - task: qetza.replacetokens.replacetokens-task.replacetokens@3
        inputs:
          targetFiles: '**/helm/*.yaml'
          encoding: 'auto'
          writeBOM: true
          verbosity: 'detailed'
          actionOnMissing: 'warn'
          keepToken: false
          tokenPrefix: '#{'
          tokenSuffix: '}#'
          useLegacyPattern: false
          enableTransforms: false
          enableTelemetry: false
      - task: HelmDeploy@0
        inputs:
          command: "package"
          chartPath: ${{ parameters.deployment_path }}
          chartName: $(image_name)
          save: false
          arguments: --version $(build.BuildNumber) --destination $(Build.ArtifactStagingDirectory)
      - task: ArtifactoryGenericUpload@1
        inputs:
          artifactoryService: ${{ parameters.artifactory_service }}
          specSource: "taskConfiguration"
          fileSpec: |
            {
              "files": [
                {
                  "pattern": "$(Build.ArtifactStagingDirectory)/${{parameters.artifactory_repository}}-$(build.BuildNumber).tgz",
                  "target": "$(artifactory_target)"
                }
              ]
            }
          collectBuildInfo: true
          buildName: "$(Build.DefinitionName)"
          buildNumber: "$(Build.BuildNumber)"
          includeEnvVars: true
          failNoOp: true

  - deployment: service_deploy
    displayName: Service deploy
    pool:
      vmImage: "ubuntu-latest"
    environment: "${{ parameters.environment }}"
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self
            - task: qetza.replacetokens.replacetokens-task.replacetokens@3
              inputs:
                targetFiles: '**/helm/*.yaml'
                encoding: 'auto'
                writeBOM: true
                verbosity: 'detailed'
                actionOnMissing: 'warn'
                keepToken: false
                tokenPrefix: '#{'
                tokenSuffix: '}#'
                useLegacyPattern: false
                enableTransforms: false
                enableTelemetry: false
            - task: HelmDeploy@0
              displayName: Install/Upgrade ${{ parameters.project_name }} Service
              inputs:
                connectionType: "Kubernetes Service Connection"
                kubernetesServiceConnection: ${{ parameters.kubernetesServiceConnection }}
                namespace: "$(namespace)"
                command: "upgrade"
                chartType: "FilePath"
                chartPath: ${{ parameters.deployment_path }}
                releaseName: ${{ parameters.project_name }}
                overrideValues: "image.tag=$(Build.BuildId)"
                valueFile: "${{ parameters.deployment_path }}values.yaml"
                arguments: "--timeout 8m0s"
            - template: webhooks/teams-notifications.yml